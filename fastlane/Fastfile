# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

before_all do
    ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"] = "fndq-kqhu-yagn-kbns"
  end

platform :ios do
   desc "Get certificates"
  lane :certificates do
    sync_code_signing(
      type: "appstore",
      app_identifier: ENV['APP_IDENTIFIER'], 
      force_for_new_devices: true,
      readonly: true
    )

    # You can repeate the sync_code_signing with other types of certificates such as appstore and adhoc
    sync_code_signing(
      type: "appstore",
      app_identifier: ENV['APP_IDENTIFIER'],
      readonly: true
    )
  end

 desc “Generate new localized screenshots”
 	lane :screenshots do
        capture_screenshots(workspace: “BuildUp.xcworkspace”, scheme: “BuildUpUITests”)
 end

 desc “Update App Identifier”
 lane :update_project_settings do
  require 'xcodeproj'
  project_path = '../BuildUp.xcodeproj'
  project = Xcodeproj::Project.open(project_path)

  project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] =  ENV['APP_IDENTIFIER']
    end
  end

  project.save
end
  

 desc “Change base url”
lane:change_main_host do
    path = '../BuildUp/Services/Configuration.swift'
    re = /\s+.stage(.*)/
    s = File.read(path)
    s[re, 0] = ' .stage:return "' + ENV['RELEASE_URL'] +"\""
    f = File.new(path, 'w')
    f.write(s)
    f.close

 update_app_identifier(app_identifier: ENV['APP_IDENTIFIER'], plist_path: "BuildUp/Resources/Info.plist")

end

 desc “Change base url + screenshots”
lane:upload_app do
    change_main_host()
    update_project_settings()
    screenshots()
    deploy()
end

 desc "Generate new certificates"
  lane :generate_new_certificates do
    sync_code_signing(
      type: "appstore",
      app_identifier: ENV['APP_IDENTIFIER'], 
      force_for_new_devices: true,
      readonly: false
    )
    
    # You can repeate the sync_code_signing with other types of certificates such as appstore and adhoc

  end

 desc "deploy"
  lane :deploy do
    setup_ci
    sync_code_signing(
      type: "appstore",
      app_identifier: ENV['APP_IDENTIFIER'],
      readonly: true
    )
    build_app(scheme: "BuildUp")
    app_store_connect_api_key(
	  key_id: "223H85GN24",
	  issuer_id: "69a6de71-daeb-47e3-e053-5b8c7c11a4d1", 	 
key_content:"-----BEGIN PRIVATE KEY-----\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQghGStYReHnLsS+qBL
hhD7N1mMiIT4kpz2SJIWf/xSU7mgCgYIKoZIzj0DAQehRANCAARaJePeenpjJuj8
rXoq2fqDz62m4DxsS/9iMRonv6iinalgzw6J8HZ+zZ1ld8wpGRHItX9y/XrxIgDP
SdRzkDKl\n-----END PRIVATE KEY-----"
)	
	upload_to_app_store(
    		username: "mohammed.khaled.sobhy@gmail.com",
    		app_identifier: ENV['APP_IDENTIFIER'],
    		skip_metadata: true,
    		skip_screenshots: false,
    		submit_for_review: false,
		run_precheck_before_submit: false,
submission_information: {
      add_id_info_limits_tracking: true,
      add_id_info_serves_ads: false,
      add_id_info_tracks_action: true,
      add_id_info_tracks_install: true,
      add_id_info_uses_idfa: true,
      content_rights_has_rights: true,
      content_rights_contains_third_party_content: true,
      export_compliance_platform: 'ios',
      export_compliance_compliance_required: false,
      export_compliance_encryption_updated: false,
      export_compliance_app_type: nil,
      export_compliance_uses_encryption: false,
      export_compliance_is_exempt: false,
      export_compliance_contains_third_party_cryptography: false,
      export_compliance_contains_proprietary_cryptography: false,
      export_compliance_available_on_french_store: false
    }
  )
  end
end
